#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128  // OLED display width, in pixels
#define SCREEN_HEIGHT 64  // OLED display height, in pixels
#define OLED_RESET    -1   // Reset pin (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// LED pins
#define GREEN_LED_PIN D5
#define RED_LED_PIN D6

int cubeSize = 16;  // Size of the cube
int x = 0;          // X position of the cube
int y = 0;          // Y position of the cube
int xSpeed = 2;     // Speed of the cube in X direction
int ySpeed = 2;     // Speed of the cube in Y direction

void setup() {
  // Initialize the display
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  display.clearDisplay();

  // Initialize the LED pins
  pinMode(GREEN_LED_PIN, OUTPUT);
  pinMode(RED_LED_PIN, OUTPUT);

  // Turn off both LEDs initially
  digitalWrite(GREEN_LED_PIN, LOW);
  digitalWrite(RED_LED_PIN, LOW);
}

void loop() {
  // Clear the previous cube
  display.clearDisplay();

  // Draw the filled cube
  display.fillRect(x, y, cubeSize, cubeSize, SSD1306_WHITE);
  //Draw clear cube
  //display.drawRect(x, y, cubeSize, cubeSize, SSD1306_WHITE);
  // Update the display with the new frame
  display.display();

  // Update the position of the cube
  x += xSpeed;
  y += ySpeed;

  // Check for collision with the edges and bounce
  if (x <= 0) {  // Left side
    xSpeed = -xSpeed;
    digitalWrite(RED_LED_PIN, LOW);  // Turn off green LED
    digitalWrite(GREEN_LED_PIN, HIGH);   // Turn on red LED
  }
  if (x + cubeSize >= SCREEN_WIDTH) {  // Right side
    xSpeed = -xSpeed;
    digitalWrite(RED_LED_PIN, HIGH); // Turn on green LED
    digitalWrite(GREEN_LED_PIN, LOW);    // Turn off red LED
  }
  if (y <= 0 || y + cubeSize >= SCREEN_HEIGHT) { // Top or bottom
    ySpeed = -ySpeed;
  }

  // Delay for a smooth animation
  delay(30);
}
